From 6bea5311d70f518444fe3218cf0b6f49bd93cc34 Mon Sep 17 00:00:00 2001
From: Stephan Bergmann <sbergman@redhat.com>
Date: Fri, 08 Mar 2013 09:36:44 +0000
Subject: Work around GCC 4.8 -Werror=unused-local-typedefs in boost

Change-Id: Ib137c5c5764333d7a878c5e996e6983a277d3856
---
diff --git a/boost/UnpackedTarball_boost.mk b/boost/UnpackedTarball_boost.mk
index 2fcae8c..fde6fa6 100644
--- a/boost/UnpackedTarball_boost.mk
+++ b/boost/UnpackedTarball_boost.mk
@@ -52,6 +52,8 @@ boost_patches += boost_1_44_0-clang-warnings.patch
 # in GCC-4.7 experimental":
 boost_patches += boost_1_44_0-gthreads.patch
 
+boost_patches += boost_1_44_0-gcc4.8.patch
+
 $(eval $(call gb_UnpackedTarball_UnpackedTarball,boost))
 
 $(eval $(call gb_UnpackedTarball_set_tarball,boost,$(BOOST_TARBALL)))
diff --git a/boost/boost_1_44_0-gcc4.8.patch b/boost/boost_1_44_0-gcc4.8.patch
new file mode 100644
index 0000000..9fc603e
--- a/dev/null
+++ b/boost/boost_1_44_0-gcc4.8.patch
@@ -0,0 +1,24 @@
+--- misc/boost_1_44_0/boost/bind/arg.hpp
++++ misc/build/boost_1_44_0/boost/bind/arg.hpp
+@@ -35,6 +35,8 @@
+     {
+         // static assert I == is_placeholder<T>::value
+         typedef char T_must_be_placeholder[ I == is_placeholder<T>::value? 1: -1 ];
++        T_must_be_placeholder dummy; (void) dummy;
++            // silence -Werror=unused-local-typedefs (GCC 4.8)
+     }
+ };
+ 
+--- misc/boost_1_44_0/boost/concept/detail/general.hpp
++++ misc/build/boost_1_44_0/boost/concept/detail/general.hpp
+@@ -68,7 +68,9 @@
+ #  define BOOST_CONCEPT_ASSERT_FN( ModelFnPtr )             \
+     typedef ::boost::concepts::detail::instantiate<          \
+     &::boost::concepts::requirement_<ModelFnPtr>::failed>    \
+-      BOOST_PP_CAT(boost_concept_check,__LINE__)
++      BOOST_PP_CAT(boost_concept_check,__LINE__); \
++    BOOST_PP_CAT(boost_concept_check,__LINE__) BOOST_PP_CAT(boost_concept_check_dummy,__LINE__)()
++        // silence -Werror=unused-local-typedefs (GCC 4.8)
+ 
+ }}
+ 
--
cgit v0.9.0.2-2-gbebe
