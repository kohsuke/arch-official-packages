SVN commit 724472 by lunakl:

Handle properly X timestamps that are so high that they cannot be
represented properly as signed long, only unsigned. This fixes
focus e.g. when mailing a link from Konqueror.

CCMAIL: kde-packagers@kde.org
Since such X timestamps happen right after startup on both of my 10.3 machines,
I suggest packagers consider adding this patch to their 3.5.8 packages.



 M  +8 -4      kstartupinfo.cpp  


--- branches/KDE/3.5/kdelibs/kdecore/kstartupinfo.cpp #724471:724472
+++ branches/KDE/3.5/kdelibs/kdecore/kstartupinfo.cpp #724471:724472
@@ -545,7 +545,7 @@
 
 void KStartupInfo::setNewStartupId( QWidget* window, const QCString& startup_id )
     {
-    long activate = true;
+    bool activate = true;
     kapp->setStartupId( startup_id );
     if( window != NULL )
         {
@@ -937,7 +937,7 @@
 #ifdef Q_WS_X11
     extern Time qt_x_user_time;
 #else
-    long qt_x_user_time = 0;
+    unsigned long qt_x_user_time = 0;
 #endif
     QCString id = QString( "%1;%2;%3;%4_TIME%5" ).arg( hostname ).arg( tm.tv_sec )
         .arg( tm.tv_usec ).arg( getpid()).arg( qt_x_user_time ).utf8();
@@ -1078,7 +1078,9 @@
     if( pos >= 0 )
         {
         bool ok;
-        long time = d->id.mid( pos + 5 ).toLong( &ok );
+        unsigned long time = d->id.mid( pos + 5 ).toULong( &ok );
+        if( !ok && d->id[ pos + 5 ] == '-' ) // try if it's as a negative signed number perhaps
+            time = d->id.mid( pos + 5 ).toLong( &ok );
         if( ok )
             return time;
         }
@@ -1093,7 +1095,9 @@
         if( pos2 >= 0 )
             {
             bool ok;
-            long time = d->id.mid( pos2 + 1, pos1 - pos2 - 1 ).toLong( &ok );
+            unsigned long time = d->id.mid( pos2 + 1, pos1 - pos2 - 1 ).toULong( &ok );
+            if( !ok && d->id[ pos + 5 ] == '-' ) // try if it's as a negative signed number perhaps
+                time = d->id.mid( pos2 + 1, pos1 - pos2 - 1 ).toLong( &ok );
             if( ok )
                 return time;
             }
--- branches/KDE/3.5/kdelibs/kioslave/http/http.cc	2007/09/26 17:08:43	717341
+++ branches/KDE/3.5/kdelibs/kioslave/http/http.cc	2007/10/17 04:11:51	726097
@@ -3409,10 +3409,6 @@
 
   } while (!m_bEOF && (len || noHeader) && (headerSize < maxHeaderSize) && (gets(buffer, sizeof(buffer)-1)));
 
-  // Send the current response before processing starts or it
-  // might never get sent...
-  forwardHttpResponseHeader();
-
   // Now process the HTTP/1.1 upgrade
   QStringList::Iterator opt = upgradeOffers.begin();
   for( ; opt != upgradeOffers.end(); ++opt) {
@@ -3818,6 +3814,10 @@
     mimeType( m_strMimeType );
   }
 
+  // Do not move send response header before any redirection as it seems
+  // to screw up some sites. See BR# 150904.
+  forwardHttpResponseHeader();
+
   if (m_request.method == HTTP_HEAD)
      return true;
 
@@ -3830,10 +3830,10 @@
         // Check...
         createCacheEntry(m_strMimeType, expireDate); // Create a cache entry
         if (!m_request.fcache)
-	    {
-		m_request.bCachedWrite = false; // Error creating cache entry.
-		kdDebug(7113) << "(" << m_pid << ") Error creating cache entry for " << m_request.url.url()<<"!\n";
-	    }
+        {
+          m_request.bCachedWrite = false; // Error creating cache entry.
+          kdDebug(7113) << "(" << m_pid << ") Error creating cache entry for " << m_request.url.url()<<"!\n";
+        }
         m_request.expireDate = expireDate;
         m_maxCacheSize = config()->readNumEntry("MaxCacheSize", DEFAULT_MAX_CACHE_SIZE) / 2;
      }
--- branches/KDE/3.5/kdelibs/kdeui/kactionclasses.cpp	2007/08/30 19:30:39	706570
+++ branches/KDE/3.5/kdelibs/kdeui/kactionclasses.cpp	2007/10/20 20:49:01	727528
@@ -667,8 +667,8 @@
     KToolBar* bar = static_cast<KToolBar*>( widget );
     int id_ = KAction::getToolButtonID();
     bar->insertCombo( comboItems(), id_, isEditable(),
-                      SIGNAL( activated( int ) ), this,
-                      SLOT( slotActivated( int ) ), isEnabled(),
+                      SIGNAL( activated( const QString & ) ), this,
+                      SLOT( slotActivated( const QString & ) ), isEnabled(),
                       toolTip(), -1, index );
 
     QComboBox *cb = bar->getCombo( id_ );
