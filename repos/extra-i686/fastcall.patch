diff -ru martian-full-20080407.orig/kmodule/marsio.c martian-full-20080407/kmodule/marsio.c
--- martian-full-20080407.orig/kmodule/marsio.c	2006-12-01 13:13:01.000000000 +1100
+++ martian-full-20080407/kmodule/marsio.c	2008-06-07 15:05:35.000000000 +1000
@@ -4,7 +4,7 @@
 #include "kmartian.h"
 #include "../martian.h"
 
-u8 fastcall mars_read_register (struct martian_common *common, u8 reg)
+u8 __attribute__((fastcall)) mars_read_register (struct martian_common *common, u8 reg)
 {
 	outb (  reg,
 
@@ -16,13 +16,13 @@
 	return inb (common->BaseAddressData);
 }
 
-void fastcall mars_write_register (struct martian_common *common, u8 reg, u8 val) 
+void __attribute__((fastcall)) mars_write_register (struct martian_common *common, u8 reg, u8 val) 
 {
 	outb (reg, common->BaseAddress);
 	return outb (val, common->BaseAddressData);
 }
 
-void fastcall mars_write_word (struct martian_common *common, u16 addr, u16 val)
+void __attribute__((fastcall)) mars_write_word (struct martian_common *common, u16 addr, u16 val)
 {
 	addr = common->BaseAddress + addr;
 	outw (val, addr);
@@ -248,7 +248,7 @@
 	// ASSERT (mfifo_ok(&mdev->dce_tx), mcb->kfifo_tx_bad++;);
 }
 
-int fastcall process_stream (struct martian *mdev) {
+int __attribute__((fastcall)) process_stream (struct martian *mdev) {
 	struct martian_common *mcb = mdev->common;
 	u32 io_dce_rx_rptr = mcb->io_dce_rx_rptr;
 	u32 io_dce_rx_wptr = mcb->io_dce_rx_wptr;
diff -ru martian-full-20080407.orig/kmodule/marsio.h martian-full-20080407/kmodule/marsio.h
--- martian-full-20080407.orig/kmodule/marsio.h	2006-07-20 11:57:08.000000000 +1000
+++ martian-full-20080407/kmodule/marsio.h	2008-06-07 15:05:35.000000000 +1000
@@ -5,9 +5,9 @@
 #ifndef __MARSIO_H
 #define __MARSIO_H
 
-u8   FASTCALL( mars_read_register (struct martian_common *common, u8 reg) );
-void FASTCALL( mars_write_register (struct martian_common *common, u8 reg, u8 val) );
-void FASTCALL( mars_write_word (struct martian_common *common, u16 addr, u16 val) );
-int FASTCALL( process_stream (struct martian *mdev) );
+u8   __attribute__((fastcall))( mars_read_register (struct martian_common *common, u8 reg) );
+void __attribute__((fastcall))( mars_write_register (struct martian_common *common, u8 reg, u8 val) );
+void __attribute__((fastcall))( mars_write_word (struct martian_common *common, u16 addr, u16 val) );
+int __attribute__((fastcall))( process_stream (struct martian *mdev) );
 
 #endif  // __MARSIO_H
diff -ru martian-full-20080407.orig/kmodule/mfifo.c martian-full-20080407/kmodule/mfifo.c
--- martian-full-20080407.orig/kmodule/mfifo.c	2006-07-23 17:07:40.000000000 +1000
+++ martian-full-20080407/kmodule/mfifo.c	2008-06-07 15:05:35.000000000 +1000
@@ -1,22 +1,22 @@
 #include "mfifo.h"
 #include <linux/string.h>
 
-static void fastcall mfifo_wrap_bin (mfifo_t *fifo, int *ending) {
+static void __attribute__((fastcall)) mfifo_wrap_bin (mfifo_t *fifo, int *ending) {
 	*ending &= fifo->mask;
 }
 
-static int fastcall mfifo_space_bin (mfifo_t *fifo) {
+static int __attribute__((fastcall)) mfifo_space_bin (mfifo_t *fifo) {
 	return CIRC_SPACE (fifo->head, fifo->tail, fifo->size);
 }
 
-static void fastcall mfifo_wrap_gen (mfifo_t *fifo, int *ending) {
+static void __attribute__((fastcall)) mfifo_wrap_gen (mfifo_t *fifo, int *ending) {
 	if (*ending >= fifo->size)
 		*ending %= fifo->size;
 	else if (*ending < 0) 
 		*ending = (*ending % fifo->size) + fifo->size;
 }
 
-static int fastcall mfifo_space_gen (mfifo_t *fifo) {
+static int __attribute__((fastcall)) mfifo_space_gen (mfifo_t *fifo) {
 	int head = fifo->head + 1;
 	int tail = (fifo->tail >= head) ? fifo->tail 
 					      : fifo->tail + fifo->size;
@@ -25,36 +25,36 @@
 }
 
 /* set to the head */
-static void fastcall mfifo_setu8 (mfifo_t *fifo, void *e) {
+static void __attribute__((fastcall)) mfifo_setu8 (mfifo_t *fifo, void *e) {
 	((u8 *) fifo->buf) [fifo->head] = * (u8 *) e;
 }
 
-static void fastcall mfifo_setu16 (mfifo_t *fifo, void *e) {
+static void __attribute__((fastcall)) mfifo_setu16 (mfifo_t *fifo, void *e) {
 	((u16 *) fifo->buf) [fifo->head] = * (u16 *) e;
 }
 
-static void fastcall mfifo_setu32 (mfifo_t *fifo, void *e) {
+static void __attribute__((fastcall)) mfifo_setu32 (mfifo_t *fifo, void *e) {
 	((u32 *) fifo->buf) [fifo->head] = * (u32 *) e;
 }
 
-static void fastcall mfifo_setgen (mfifo_t *fifo, void *e) {
+static void __attribute__((fastcall)) mfifo_setgen (mfifo_t *fifo, void *e) {
 	memcpy (fifo->head * fifo->esize + (char *) fifo->buf, e, fifo->esize);
 }
 
 /* get from tail */
-static void fastcall mfifo_getu8 (mfifo_t *fifo, void *e) {
+static void __attribute__((fastcall)) mfifo_getu8 (mfifo_t *fifo, void *e) {
 	* (u8 *) e = ((u8 *) fifo->buf) [fifo->tail];
 }
 
-static void fastcall mfifo_getu16 (mfifo_t *fifo, void *e) {
+static void __attribute__((fastcall)) mfifo_getu16 (mfifo_t *fifo, void *e) {
 	 * (u16 *) e = ((u16 *) fifo->buf) [fifo->tail];
 }
 
-static void fastcall mfifo_getu32 (mfifo_t *fifo, void *e) {
+static void __attribute__((fastcall)) mfifo_getu32 (mfifo_t *fifo, void *e) {
 	* (u32 *) e = ((u32 *) fifo->buf) [fifo->tail];
 }
 
-static void fastcall mfifo_getgen (mfifo_t *fifo, void *e) {
+static void __attribute__((fastcall)) mfifo_getgen (mfifo_t *fifo, void *e) {
 	memcpy (e, fifo->tail * fifo->esize + (char *) fifo->buf, fifo->esize);
 }
 
diff -ru martian-full-20080407.orig/kmodule/mfifo.h martian-full-20080407/kmodule/mfifo.h
--- martian-full-20080407.orig/kmodule/mfifo.h	2006-11-29 08:34:26.000000000 +1100
+++ martian-full-20080407/kmodule/mfifo.h	2008-06-07 15:05:35.000000000 +1000
@@ -15,11 +15,11 @@
 typedef struct _mfifo mfifo_t;
 
 struct mfifo_ops {
-	void fastcall (*set) (mfifo_t *fifo, void *el);
-	void fastcall (*get) (mfifo_t *fifo, void *el);
+	void __attribute__((fastcall)) (*set) (mfifo_t *fifo, void *el);
+	void __attribute__((fastcall)) (*get) (mfifo_t *fifo, void *el);
 
-	void FASTCALL ((*wrap) (mfifo_t *fifo, int *ending) );
-	int FASTCALL ( (*space) (mfifo_t *fifo) );
+	void __attribute__((fastcall)) ((*wrap) (mfifo_t *fifo, int *ending) );
+	int __attribute__((fastcall)) ( (*space) (mfifo_t *fifo) );
 };
 
 struct _mfifo {
