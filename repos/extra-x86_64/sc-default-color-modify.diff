--- officecfg/registry/schema/org/openoffice/Office/Chart.xcs.bak	2004-10-01 12:46:32.865813560 +0530
+++ officecfg/registry/schema/org/openoffice/Office/Chart.xcs	2004-10-01 14:56:24.552297168 +0530
@@ -172,7 +172,7 @@
 					<desc>Specifies a list of color values to be used for the first n series, where n is the size of the list. For i &gt; n the color used is equal to entry number i modulo n in the list. You should keep the size of the list at 12. Also note that the values are interpreted as unsigned 32bit values, although it is possible to get negative (signed) numbers in this list when being displayed in decimal.</desc>
 					<label>Chart colors</label>
 				</info>
-				<value>0x9999ff 0x993366 0xffffcc 0xccffff 0x660066 0xff8080 0x0066cc 0xccccff 0x000080 0xff00ff 0x00ffff 0xffff00</value>
+				<value>0xff6f00 0x800080 0x666666 0x6b4794 0x280099 0x7da647 0xe6e64c 0xff9966 0x000080 0xfff0ff 0x00ffff 0x9999ff</value>
 			</prop>
 		</group>
 	</component>
dummy line to avoid confusing diff-mode
--- sch/source/ui/app/schopt.cxx	2004-10-01 12:31:36.035152544 +0530
+++ sch/source/ui/app/schopt.cxx	2004-10-01 12:31:25.833703400 +0530
@@ -144,18 +144,18 @@
 void SchColorTable::useDefault()
 {
 	ColorData aColors[] = {
-		RGB_COLORDATA( 0x99,  0x99, 0xff ),
-		RGB_COLORDATA( 0x99,  0x33, 0x66 ),
-		RGB_COLORDATA( 0xff,  0xff, 0xcc ),
-		RGB_COLORDATA( 0xcc,  0xff, 0xff ),
-		RGB_COLORDATA( 0x66,  0x00, 0x66 ),
-		RGB_COLORDATA( 0xff,  0x80, 0x80 ),
-		RGB_COLORDATA( 0x00,  0x66, 0xcc ),
-		RGB_COLORDATA( 0xcc,  0xcc, 0xff ),
+		RGB_COLORDATA( 0xff,  0x6f, 0x00 ),
+		RGB_COLORDATA( 0x80,  0x00, 0x80 ),
+		RGB_COLORDATA( 0x66,  0x66, 0x66 ),
+		RGB_COLORDATA( 0x6b,  0x47, 0x94 ),
+		RGB_COLORDATA( 0x28,  0x00, 0x99 ),
+		RGB_COLORDATA( 0x7d,  0xa6, 0x47 ),
+		RGB_COLORDATA( 0xe6,  0xe6, 0x4c ),
+		RGB_COLORDATA( 0xff,  0x99, 0x66 ),
 		RGB_COLORDATA( 0x00,  0x00, 0x80 ),
-		RGB_COLORDATA( 0xff,  0x00, 0xff ),
+		RGB_COLORDATA( 0xff,  0xf0, 0xff ),
 		RGB_COLORDATA( 0x00,  0xff, 0xff ),
-		RGB_COLORDATA( 0xff,  0xff, 0x00 )
+		RGB_COLORDATA( 0x99,  0x99, 0xff )
 	};
 
     clear();
--- sch/source/core/chtmode1.cxx	2004-10-05 15:19:22.847743536 +0530
+++ sch/source/core/chtmode1.cxx	2004-10-05 15:19:00.387158064 +0530
@@ -1074,18 +1074,18 @@
 		nCount = ROW_COLOR_COUNT;
 		pDefaultCol = new ColorData[ nCount ];
 
-		pDefaultCol[  0 ]  = RGB_COLORDATA( 0x99,  0x99, 0xff );
-		pDefaultCol[  1 ]  = RGB_COLORDATA( 0x99,  0x33, 0x66 );
-		pDefaultCol[  2 ]  = RGB_COLORDATA( 0xff,  0xff, 0xcc );
-		pDefaultCol[  3 ]  = RGB_COLORDATA( 0xcc,  0xff, 0xff );
-		pDefaultCol[  4 ]  = RGB_COLORDATA( 0x66,  0x00, 0x66 );
-		pDefaultCol[  5 ]  = RGB_COLORDATA( 0xff,  0x80, 0x80 );
-		pDefaultCol[  6 ]  = RGB_COLORDATA( 0x00,  0x66, 0xcc );
-		pDefaultCol[  7 ]  = RGB_COLORDATA( 0xcc,  0xcc, 0xff );
+		pDefaultCol[  0 ]  = RGB_COLORDATA( 0xff,  0x6f, 0x00 );
+		pDefaultCol[  1 ]  = RGB_COLORDATA( 0x80,  0x00, 0x80 );
+		pDefaultCol[  2 ]  = RGB_COLORDATA( 0x66,  0x66, 0x66 );
+		pDefaultCol[  3 ]  = RGB_COLORDATA( 0x6b,  0x47, 0x94 );
+		pDefaultCol[  4 ]  = RGB_COLORDATA( 0x28,  0x00, 0x99 );
+		pDefaultCol[  5 ]  = RGB_COLORDATA( 0x7d,  0xa6, 0x47 );
+		pDefaultCol[  6 ]  = RGB_COLORDATA( 0xe6,  0xe6, 0x4c );
+		pDefaultCol[  7 ]  = RGB_COLORDATA( 0xff,  0x99, 0x66 );
 		pDefaultCol[  8 ]  = RGB_COLORDATA( 0x00,  0x00, 0x80 );
-		pDefaultCol[  9 ]  = RGB_COLORDATA( 0xff,  0x00, 0xff );
+		pDefaultCol[  9 ]  = RGB_COLORDATA( 0xff,  0xf0, 0xff );
 		pDefaultCol[ 10 ]  = RGB_COLORDATA( 0x00,  0xff, 0xff );
-		pDefaultCol[ 11 ]  = RGB_COLORDATA( 0xff,  0xff, 0x00 );
+		pDefaultCol[ 11 ]  = RGB_COLORDATA( 0x99,  0x99, 0xff );
 	}
 
 	// create colors from table if they exist otherwise copy default colors
