--- a/apps/plasma/applets/folderview/iconview.cpp
+++ b/apps/plasma/applets/folderview/iconview.cpp
@@ -1732,9 +1732,8 @@ void IconView::keyPressEvent(QKeyEvent *
         }
 
         nextIndex = currentIndex.sibling(newItem, currentIndex.column());
-    }
-
-    else {        //If the user has moved the icons, i.e. the view is no longer sorted
+    } else {
+        //If the user has moved the icons, i.e. the view is no longer sorted
         QPoint currentPos = visualRect(currentIndex).center();
 
         //Store distance between the first and the current index-
@@ -1813,8 +1812,7 @@ void IconView::mousePressEvent(QGraphics
         const QModelIndex index = indexAt(pos);
 
         // If an icon was pressed
-        if (index.isValid())
-        {
+        if (index.isValid()) {
             //if ctrl is held
             if (event->modifiers() & Qt::ControlModifier) {
                 m_selectionModel->select(index, QItemSelectionModel::Toggle);
@@ -1833,16 +1831,11 @@ void IconView::mousePressEvent(QGraphics
                 m_selectionModel->select(index, QItemSelectionModel::ClearAndSelect);
                 m_selectionModel->setCurrentIndex(index, QItemSelectionModel::NoUpdate);
                 markAreaDirty(visibleArea());
-            }
-            else {
+            } else {
                 markAreaDirty(visualRect(index));
             }
 
-            if (!(event->modifiers() & (Qt::ControlModifier | Qt::ShiftModifier)) &&
-                KGlobalSettings::singleClick()) {
-                m_pressedIndex = index;
-            }
-
+            m_pressedIndex = index;
             m_buttonDownPos = pos;
             return;
         }
@@ -1882,8 +1875,7 @@ void IconView::mousePressEvent(QGraphics
 
 void IconView::mouseReleaseEvent(QGraphicsSceneMouseEvent *event)
 {
-    if (event->button() == Qt::LeftButton)
-    {
+    if (event->button() == Qt::LeftButton) {
         if (m_rubberBand.isValid()) {
             markAreaDirty(m_rubberBand);
             m_rubberBand = QRect();
@@ -1894,22 +1886,27 @@ void IconView::mouseReleaseEvent(QGraphi
         const QModelIndex index = indexAt(pos);
 
         bool ctrlOrShiftPressed = (event->modifiers() & (Qt::ControlModifier | Qt::ShiftModifier));
-        if (index.isValid() && index == m_pressedIndex && !ctrlOrShiftPressed) {
-            if (!m_doubleClick && KGlobalSettings::singleClick()) {
-                emit activated(index);
-                m_selectionModel->clearSelection();
-                markAreaDirty(visibleArea());
-            }
-            // We don't clear and update the selection and current index in
-            // mousePressEvent() if the item is already selected when it's pressed,
-            // so we need to do that here.
-            if (m_selectionModel->currentIndex() != index ||
-                m_selectionModel->selectedIndexes().count() > 1) {
-                m_selectionModel->select(index, QItemSelectionModel::ClearAndSelect);
-                m_selectionModel->setCurrentIndex(index, QItemSelectionModel::NoUpdate);
+        if (index.isValid() && index == m_pressedIndex) {
+            if (ctrlOrShiftPressed) {
                 markAreaDirty(visibleArea());
+            } else {
+                if (!m_doubleClick) {
+                    if (KGlobalSettings::singleClick()) {
+                        emit activated(index);
+                        m_selectionModel->clearSelection();
+                    }
+                    markAreaDirty(visibleArea());
+                }
+                // We don't clear and update the selection and current index in
+                // mousePressEvent() if the item is already selected when it's pressed,
+                // so we need to do that here.
+                if (m_selectionModel->currentIndex() != index ||
+                    m_selectionModel->selectedIndexes().count() > 1) {
+                    m_selectionModel->select(index, QItemSelectionModel::ClearAndSelect);
+                    m_selectionModel->setCurrentIndex(index, QItemSelectionModel::NoUpdate);
+                    markAreaDirty(visibleArea());
+                }
             }
-            m_doubleClick = false;
         }
     }
 
