diff -Nur old/CheckQtScriptBindings.cmake new/CheckQtScriptBindings.cmake
--- cmake/modules/CheckQtScriptBindings.cmake	1970-01-01 01:00:00.000000000 +0100
+++ cmake/modules/CheckQtScriptBindings.cmake	2009-04-08 18:18:27.000000000 +0200
@@ -0,0 +1,32 @@
+## Ian Monroe <ian@monroe.nu> Copyright 2009 
+# released under public domain or:
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+
+message(STATUS "Checking if the QtScript Qt Bindings are installed.")
+set(LINK_LIBRARIES "-lQtCore -lkdeui -lkdecore -lQtScript")
+#set(LINK_LIBRARIES "${QT_QTCORE_LIBS} ${KDE4_KDEUI_LIBS} ${KDE4_KDECORE_LIBS} -${QT_QTSCRIPT_LIBS}")
+try_run(BINDINGS_RUN_RESULT BINDINGS_COMPILE_RESULT
+        ${PROJECT_BINARY_DIR}/CMakeTmp/generator
+        ${PROJECT_SOURCE_DIR}/cmake/modules/QtScriptBindingsTest.cpp 
+        CMAKE_FLAGS "-DCOMPILE_DEFINITIONS:STRING=${LINK_LIBRARIES}"
+        )
+if(BINDINGS_RUN_RESULT EQUAL 0)
+    message( STATUS "QtBindings found")
+    set(QTSCRIPT_QT_BINDINGS_FOUND TRUE)
+else(BINDINGS_RUN_RESULT EQUAL 0)
+    set(QTSCRIPT_QT_BINDINGS_FOUND FALSE)
+endif(BINDINGS_RUN_RESULT EQUAL 0)
+
diff -Nur old/QtScriptBindingsTest.cpp new/QtScriptBindingsTest.cpp
--- cmake/modules/QtScriptBindingsTest.cpp	1970-01-01 01:00:00.000000000 +0100
+++ cmake/modules/QtScriptBindingsTest.cpp	2009-04-08 18:17:47.000000000 +0200
@@ -0,0 +1,45 @@
+/*
+ * Copyright (C) 2009 Ian Monroe <ian@monroe.nu>
+ * released under public domain or:
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+#include <KDE/KApplication>
+#include <KDE/KAboutData>
+#include <KDE/KCmdLineArgs>
+#include <QtScript/QScriptEngine>
+#include <QtCore/QStringList>
+
+#define FAIL 0xA
+
+int main(int argc, char **argv)
+{
+    KAboutData about( "findgeneratorplugins", "", ki18n("Generator Exists?"), "1.0", ki18n("Find if the QtScript Plugins Are Installed"), KAboutData::License_LGPL_V2 );
+    KCmdLineArgs::init( argc, argv, &about );
+    KApplication app( false ); //no gui pls
+    
+    QStringList allowedBindings;
+    allowedBindings << "qt.core" << "qt.gui" << "qt.sql" << "qt.xml" << "qt.uitools" << "qt.network";
+    QScriptEngine engine;
+    foreach( QString binding, allowedBindings )
+    {
+        if( !engine.importExtension( binding ).isUndefined() )
+        { // undefined indiciates success
+            qDebug( binding.toLatin1() +  " not found" );
+            return FAIL;
+        }
+    }
+    return 0;
+}
--- CMakeLists.txt~	2009-04-08 18:28:41.000000000 +0200
+++ CMakeLists.txt	2009-04-08 18:28:41.000000000 +0200
@@ -20,7 +20,12 @@
 
 #this line has to be before add_defintions, but after the KDE4 cmake includes
 #because they are used to determine install locations
-add_subdirectory( src/scriptengine/generator )
+include(CheckQtScriptBindings)
+if( NOT QTSCRIPT_QT_BINDINGS_FOUND )
+#we're keeping the script generator in our code to give some
+#time to transition to depending on it seperate
+    add_subdirectory( src/scriptengine/generator )
+endif( QTSCRIPT_QT_BINDINGS_FOUND )
 add_definitions(${QT_DEFINITIONS} ${KDE4_DEFINITIONS})
 
 include(CheckLibraryExists)
diff -urN amarok-2.0.1.1.old/cmake/modules/FindIpod.cmake amarok-2.0.1.1/cmake/modules/FindIpod.cmake
--- cmake/modules/FindIpod.cmake	2009-01-06 13:48:28.000000000 +0100
+++ cmake/modules/FindIpod.cmake	2009-02-10 18:18:23.000000000 +0100
@@ -2,45 +2,35 @@
 # Once done this will define
 #
 #  IPOD_FOUND - system has libgpod
-#  IPOD_INCLUDE_DIR - the libgpod include directory
+#  IPOD_INCLUDE_DIRS - the libgpod include directory
 #  IPOD_LIBRARIES - Link these to use libgpod
-#  IPOD_DEFINITIONS - Compiler switches required for using libgpod
+#  IPOD_CFLAGS - Compiler switches required for using libgpod
+#  IPOD_VERSION - Version number of libgpod
 #
 
-if (IPOD_INCLUDE_DIR AND IPOD_LIBRARIES)
+if (IPOD_INCLUDE_DIRS AND IPOD_LIBRARIES)
 
   # in cache already
   SET(IPOD_FOUND TRUE)
 
-else (IPOD_INCLUDE_DIR AND IPOD_LIBRARIES)
+else (IPOD_INCLUDE_DIRS AND IPOD_LIBRARIES)
   if(NOT WIN32)
     # use pkg-config to get the directories and then use these values
     # in the FIND_PATH() and FIND_LIBRARY() calls
-    INCLUDE(UsePkgConfig)
-  
-    PKGCONFIG(libgpod-1.0 _IPODIncDir _IPODLinkDir _IPODLinkFlags _IPODCflags)
-  
-    set(IPOD_DEFINITIONS ${_IPODCflags})
+    find_package(PkgConfig)
+    PKG_SEARCH_MODULE(IPOD libgpod-1.0)
+
   endif(NOT WIN32)
+  IF (IPOD_FOUND)
+     IF (NOT IPOD_FIND_QUIETLY)
+        MESSAGE(STATUS "Found libgpod-1 ${IPOD_VERSION}")
+     ENDIF (NOT IPOD_FIND_QUIETLY)
+  ELSE (IPOD_FOUND)
+     IF (IPOD_FIND_REQUIRED)
+        MESSAGE(FATAL_ERROR "Could NOT find libgpod-1, check FindPkgConfig output above!")
+     ENDIF (IPOD_FIND_REQUIRED)
+  ENDIF (IPOD_FOUND)
+
+  MARK_AS_ADVANCED(IPOD_INCLUDE_DIRS)
 
-  FIND_PATH(IPOD_INCLUDE_DIR gpod/itdb.h /usr/include/gpod-1.0
-    ${_IPODIncDir}
-  )
-  
-  FIND_LIBRARY(IPOD_LIBRARIES NAMES gpod
-    PATHS
-    ${_IPODLinkDir}
-  )
-
-  if (IPOD_INCLUDE_DIR AND IPOD_LIBRARIES)
-    SET(IPOD_FOUND TRUE)
-  else (IPOD_INCLUDE_DIR AND IPOD_LIBRARIES)
-    SET(IPOD_FOUND_FALSE)
-  endif (IPOD_INCLUDE_DIR AND IPOD_LIBRARIES)
-
-  include(FindPackageHandleStandardArgs)
-  FIND_PACKAGE_HANDLE_STANDARD_ARGS(Ipod DEFAULT_MSG IPOD_INCLUDE_DIR IPOD_LIBRARIES )
- 
-  MARK_AS_ADVANCED(IPOD_INCLUDE_DIR IPOD_LIBRARIES)
-  
-endif (IPOD_INCLUDE_DIR AND IPOD_LIBRARIES)
+endif (IPOD_INCLUDE_DIRS AND IPOD_LIBRARIES)
diff -urN amarok-2.0.1.1.old/CMakeLists.txt amarok-2.0.1.1/CMakeLists.txt
--- CMakeLists.txt	2009-01-06 14:12:50.000000000 +0100
+++ CMakeLists.txt	2009-02-10 18:22:23.000000000 +0100
@@ -56,7 +56,10 @@
 macro_log_feature( GDK_FOUND "Gdk" "Support for artwork on iPod audio devices via GdkPixbuf" "http://developer.gnome.org/arch/imaging/gdkpixbuf.html" FALSE "2.0.x" "" )
 
 macro_optional_find_package(Ipod)
-macro_log_feature( IPOD_FOUND "libgpod" "Support Apple iPod audio devices" "http://sourceforge.net/projects/gtkpod/" FALSE "0.6.0" "" )
+if(IPOD_FOUND)
+	macro_ensure_version("0.7.0" ${IPOD_VERSION} IPOD_0_7)
+endif(IPOD_FOUND)
+macro_log_feature( IPOD_FOUND "libgpod" "Support Apple iPod audio devices" "http://sourceforge.net/projects/gtkpod/" FALSE "0.7.0" "" )
 
 #macro_optional_find_package(MySQL)
 #macro_log_feature( MYSQL_FOUND "mysql" "Store Collection in a mysql database instead of a sqlite one" "http://www.mysql.com" FALSE "4.1.0" "" )
diff -urN amarok-2.0.1.1.old/src/collection/ipodcollection/CMakeLists.txt amarok-2.0.1.1/src/collection/ipodcollection/CMakeLists.txt
--- src/collection/ipodcollection/CMakeLists.txt	2009-01-06 13:49:32.000000000 +0100
+++ src/collection/ipodcollection/CMakeLists.txt	2009-02-10 22:22:01.000000000 +0100
@@ -17,7 +17,7 @@
    handler
    ${GLIB2_INCLUDE_DIR}
    ${GDK_INCLUDE_DIR}
-   ${IPOD_INCLUDE_DIR}
+   ${IPOD_INCLUDE_DIRS}
    ${CMAKE_CURRENT_BINARY_DIR}/../..
    ${AMAROK_COLLECTION_SUPPORT_DIR}
    ${KDE4_INCLUDE_DIR}
diff -urN amarok-2.0.1.1.old/src/collection/ipodcollection/handler/IpodHandler.cpp amarok-2.0.1.1/src/collection/ipodcollection/handler/IpodHandler.cpp
--- src/collection/ipodcollection/handler/IpodHandler.cpp	2009-01-06 13:49:32.000000000 +0100
+++ src/collection/ipodcollection/handler/IpodHandler.cpp	2009-02-10 18:00:09.000000000 +0100
@@ -1339,73 +1339,12 @@
     QFileInfo tempImageFileInfo( tempImageFile ); // get info for path
     QString tempImagePath = tempImageFileInfo.absoluteFilePath(); // path
 
-    Itdb_Thumb *thumb = NULL;
     GdkPixbuf *gpixbuf = NULL;
-    QString thumbPath;
 
     // pull image out of ipod
 
-    if( ipodtrack->has_artwork == 0x01 )
-    {
-        // try small first
-
-        thumb = itdb_artwork_get_thumb_by_type ( ipodtrack->artwork, ITDB_THUMB_COVER_SMALL );
-
-        // then large if needed
-        if( thumb == NULL)
-        {
-            thumb = itdb_artwork_get_thumb_by_type ( ipodtrack->artwork, ITDB_THUMB_COVER_LARGE );
-        }
-
-        if( thumb != NULL)
-        {
-            gpixbuf = (GdkPixbuf*) itdb_thumb_get_gdk_pixbuf( m_device, thumb );
-        }
-        else
-        {
-            GList *thumbs = ipodtrack->artwork->thumbnails;
-
-            for(; thumbs; thumbs = thumbs->next)
-            {
-                Itdb_Thumb *curThumb = ( Itdb_Thumb * )thumbs->data;
-                if( curThumb == NULL)
-                    continue;
-
-                switch( curThumb->type )
-                {
-                    case ITDB_THUMB_PHOTO_SMALL:
-                        break;
-                    case ITDB_THUMB_PHOTO_LARGE:
-                        break;
-                    case ITDB_THUMB_PHOTO_FULL_SCREEN:
-                        break;
-                    case ITDB_THUMB_PHOTO_TV_SCREEN:
-                        break;
-                    case ITDB_THUMB_COVER_XLARGE:
-                        break;
-                    case ITDB_THUMB_COVER_MEDIUM:
-                        break;
-                    case ITDB_THUMB_COVER_SMEDIUM:
-                        break;
-                    case ITDB_THUMB_COVER_XSMALL:
-                        break;
-
-                    default:
-                        break;
-                }
-
-                thumb = curThumb;
-                break;
-
-            }
-
-            if( thumb != NULL)
-            {
-                thumbPath = QString::fromUtf8( itdb_thumb_get_filename( m_device, thumb ) );
-                gpixbuf = (GdkPixbuf*) itdb_thumb_get_gdk_pixbuf( m_device, thumb );
-            }
-        }
-    }
+    if( ipodtrack->has_artwork == 0x01 ) // 0x01 = true ; 0x02 = false
+		 gpixbuf = (GdkPixbuf*) itdb_artwork_get_pixbuf( m_device, ipodtrack->artwork, 50, 50 );
 
     if(gpixbuf != NULL)
     {
