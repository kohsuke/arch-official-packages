`configure' configures this package to adapt to many kinds of systems.

Usage: ./configure [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print `checking...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for `--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or `..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [/usr/local]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [PREFIX]

By default, `make install' will install all the files in
`/usr/local/bin', `/usr/local/lib' etc.  You can specify
an installation prefix other than `/usr/local' using `--prefix',
for instance `--prefix=$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR            user executables [EPREFIX/bin]
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --libexecdir=DIR        program executables [EPREFIX/libexec]
  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
  --libdir=DIR            object code libraries [EPREFIX/lib]
  --includedir=DIR        C header files [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
  --infodir=DIR           info documentation [DATAROOTDIR/info]
  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
  --docdir=DIR            documentation root [DATAROOTDIR/doc/PACKAGE]
  --htmldir=DIR           html documentation [DOCDIR]
  --dvidir=DIR            dvi documentation [DOCDIR]
  --pdfdir=DIR            pdf documentation [DOCDIR]
  --psdir=DIR             ps documentation [DOCDIR]

X features:
  --x-includes=DIR    X include files are in DIR
  --x-libraries=DIR   X library files are in DIR

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
  --target=TARGET   configure for building compilers for TARGET [HOST]

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --disable-ldap          Disables the use of LDAP backend via Netscape/Mozilla
                          or OpenLDAP LDAP SDK

  --enable-lockdown       Enables the gconf integration work in OOo

  --disable-vba           disables the vba compatibility feature

  --enable-pch            EXPERIMENTAL: Enables precompiled header support for C++.

  --disable-mozilla       OO.o usually includes a strangely hacked up mozilla
                          binary for your platform, to build without this
                          version, use this option.

  --disable-epm           OO.o includes self-packaging code, that requires
                          epm, however epm is useless for large scale
                          package building.

  --disable-odk           OO.o includes an ODK, office development kit
                          which some packagers may with to build without

  --disable-qadevooo      OO.o includes some qa testsuites which some
                          packagers may wish to build without

  --disable-fontooo       disable FontOOo
                          (useful for distributions using fontconfig for OOo)

  --disable-mathmldtd     disable mathmldtd
                          (useful for distributions that want to avoid packaging
                          it)

  --enable-evolution2     Allows the built-in evolution 2 addressbook
                          connectivity build to be enabled.

  --disable-cups          disable cups support in the psprint project

  --disable-fontconfig    disable support for the fontconfig library

  --disable-directx       Remove DirectX implementation for the new XCanvas
                          interface. The DirectX support requires more stuff
                          installed on Windows to compile.
                          (DirectX SDK, GDI+ libs)

  --disable-activex       Disable the use of ActiveX for windows build.
                          This switch is mandatory when using VC++ 2005 Express.

  --enable-symbols        Include debugging symbols in output.
                          WARNING - a complete build needs 8 Gb of space and
                          takes much longer. (enables -g compiler flag)

                          --enable-symbols=SMALL sets the gcc -g1 setting
                          which is smaller.

                          Enabling symbols disables the stripping of the solver
                          (--disable-strip-solver).

  --disable-strip-solver  Disable the stripping of the solver.
                          By default the solver is stripped unless a build with
                          debugging symbols (--enable-symbols) is requested.

                          This switch allows to override this setting.

  --enable-werror         Turn warnings to errors. (Has no effect in modules
                          where the treating of warnings as errors is disabled
                          explicitely)

  --enable-debug          Include debugging symbols from --enable-symbols
                          plus extra debugging code.  Extra large build!
                          (enables -g compiler flag and dmake debug=true)

  --enable-dbgutil        Include additional debugging utilities, such as
                          assertions, object counting, etc. Larger build.
                          Independent from --enable-debug

  --enable-crashdump[=yes|TRUE|STATIC|no]
                          Enable (disable) the crashdump feature code.
                          [default=no]

  --enable-cl-standard    For Microsoft C/C++ compiler users, use non-optimizing
                          standard compiler. ( This just disavles optimization
                          options and therefore removes a lot of warnings when
                          using the cheaper standard compiler. )

  --disable-gtk           Determines whether to use Gtk+ vclplug on platforms
                          where Gtk+ is available.

  --disable-systray       Determines whether to build the systray quickstarter.

  --enable-cairo          Determines whether to use Cairo canvas backend on
                          platforms where Cairo is available.

  --enable-opengl         Determines whether to use OpenGL (for 3D transitions)
                          This is built as an UNO extension and not deployed
			  in the install per default.

  --enable-dbus           Determines whether to enable presentation mode
                          screensaver control under GNOME via DBUS

  --disable-gnome-vfs     Determines whether to use the Gnome Virtual Filing
                          System on platforms where that VFS is available

  --enable-gio            Determines whether to use the GIO support

  --enable-static-gtk     Modules that are linked against gtk libraries use
                          the static libraries instead of the dynamic ones.
                          (enables -Bstatic linker flag for gtk libraries)

  --enable-layout         Enable the compilation and use of layout dialogs

  --disable-build-mozilla Use this option if you do not want to build the
                          mozilla components from the mozilla source code but
                          take precompiled zips

  --enable-kde            Determines whether to use Qt/KDE vclplug on platforms
                          where Qt and KDE are available.

  --disable-kdeab         Disable the KDE address book support

  --disable-binfilter     Disable legacy binary file formats filters

  --disable-rpath         Disable the use of relative paths in shared libraries

  --disable-pam           Disable pam support.

  --enable-pam-link       link with libpam instead of dynamically open it

  --disable-crypt-link    disable linking with libcrypt instead of dynamically
                          open it (needed for ancient GNU/Linux distributions
                          without crypt()/libcrypt)

  --enable-xrender-link   link with libXrender instead of dynamically open it

  --disable-randr          disable RandR support in the vcl project

  --enable-minimizer          enables the build of the Presentation Minimizer extension

  --enable-presenter-screen          enables the build of the Presenter Screen extension

  --disable-pdfimport         disables the build of the PDF Import extension and xpdf

  --disable-mediawiki     disables the build of the MediaWiki Editor extension

  --enable-ogltrans       enables the build of the OGLTrans extension

  --disable-reportdesign  disables the build of the Report Builder extension

  --disable-minimizer          disables the build of the Presentation Minimizer extension

  --disable-neon          Disable neon and the compilation of webdav binding

  --disable-Xaw           Disables the use of Xaw for the Netscape/Mozilla
                           plugin

  --enable-gcjaot         Build with[out] using Ahead of Time java compilation
                          support to speed up buildsi by compiling the jars also
                          to native code..
                          --enable-gcjaot is only known to work with bytecode
                          created with gcj or ecj

  --enable-check-only     Use this option option if you just want to check your
                          environment.  This option stops the generation of an
                          ????env.set

                          Usage: --enable-check-only=yes

  --enable-sgistl         for IRIX users, use this option option to build
                          OpenOffice.org using SGI's STL.

                          Usage: --enable-sgistl=yes

  --enable-verbose        Increase build verbosity.
  --disable-verbose       Decrease build verbosity.

  --disable-largefile     omit support for large files

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-gnu-patch        Specify location of GNU patch on Solaris or FreeBSD

  --without-agg           Disable the use of agg altogether

  --with-gnu-cp           Specify location of GNU cp on Solaris or FreeBSD

  --without-gpc           Use the internal polygon clipping code instead of
                          the external GPC polygon clipping library.

  --with-openldap         Enables the use of the OpenLDAP LDAP SDK instead
                          of the Netscape/Mozilla one

  --with-vba-package-format   specify package format for vba compatibility api.
                          Specifying  "builtin" means the api component and
                          associated type library are  part of the installation set.
                          Specifying "extn" creates an uno extension that is
                          part of the installation set ( located in the program
                          directory ) that MUST be optionly registered using
                          either the unopkg executeable or the extension manager
                          gui.

                          Note: "builtin" is the default, "extn" can cause
                          problems.
                          Usage: --with-vba-package-format="builtin" or
                                 --with-vba-package-format="extn"

  --without-fonts         Removes Bitstream Vera fonts from
                          openoffice.org installation set, for people building
                          for specific distributions where the fonts are known
                          to be already available

  --without-ppds          Removes Postscript Printer definition files from
                          openoffice.org installation set, for people building
                          for specific distributions where PPDs are known to be
                          already available (every recent distro with CUPS
                          backend)

  --without-afms          Removes bitmap font files from openoffice.org
                          installation set, for people building for specific
                          distributions where AFM files or TrueType Fonts
                          are known to be available.

  --with-package-format   specify package format(s) for OOo installsets.
                          Default is "normal" one of the OS/Distribution.

                          Usage: --with-package-format="foo bar"

  --with-system-stdlibs   use libstdc++/libgcc_s already on system

  --with-system-mspack    use libmspack already installed on system

  --with-system-cairo      Use cairo libraries already on system

  --with-mozilla-version  Choose which version of mozilla to use while building
                          mozilla. Default: 1.7.5.
                          Note that not all versions are supported.

  --with-mozilla-toolkit  Choose which GUI toolkit to use while building mozilla
                          components. Default: gtk2

  --without-myspell-dicts Removes myspell dictionaries from openoffice.org
                          installation set, for people building for specific
                          distributions where the myspell dictionaries are
                          installed from other sources

  --with-system-dicts    Use dictionaries from system paths- Specify
                         them via --with-{dict,hyph,thes}-path=/path
			 if you want to override the default ones

  --with-external-dict-dir Specify external dictionary dir

  --with-external-hyph-dir Specify external hyphenation pattern dir

  --with-external-thes-dir Specify external thesaurus dir

  --without-writer2latex Removes writer2latex from openoffice.org installation
                          set, for people building for specific distributions
                          where writer2latex is known to be already available

  --with-system-libs      Use libs already on system -- enables all
                          --with-system-* flags except mozilla and
                          odbc/sane/xrender-header(s)

  --with-system-headers   Use headers already on system -- enables all
                          --with-system-* flags for external packages
                          whose headers are the only entities used i.e.
                          boost/vigra/odbc/sane/xrender-header(s)

  --without-system-jars   When building with --with-system-libs, also the
                          needed jars are expected on the system. Use this to
                          disable that.
                          (except for the db case where --with-system-db
                          *has to* imply using the db.jar from there, too)

  --with-system-zlib      Use zlib already on system

  --with-system-openssl   Use OpenSSL already on system

  --with-system-jpeg      Use jpeg already on system

  --with-system-expat     Use expat already on system

  --with-system-freetype  Use freetype already on system

  --with-system-libwpd    Use libwpd already on system

  --with-system-libxml    Use libxml already on system

  --with-system-python    Use python already on system

  --with-system-icu       Use icu already on system

  --with-system-db        Use berkeley db already on system

  --with-system-hsqldb    Use hsqldb already on system

  --with-hsqldb-jar=JARFILE   Specify path to jarfile manually
  --with-system-beanshell Use beanshell already on system

  --with-beanshell-jar=JARFILE   Specify path to jarfile manually
  --with-commons-codec-jar=JARFILE   Specify path to jarfile manually
  --with-commons-lang-jar=JARFILE   Specify path to jarfile manually
  --with-commons-httpclient-jar=JARFILE   Specify path to jarfile manually
  --with-commons-logging-jar=JARFILE   Specify path to jarfile manually
  --servlet-api-jar=JARFILE   Specify path to jarfile manually
  --with-system-jfreereport      Use JFreeReport already on system

  --with-jcommon-jar=JARFILE   Specify path to jarfile manually
  --with-sac-jar=JARFILE   Specify path to jarfile manually
  --with-libxml-jar=JARFILE   Specify path to jarfile manually
  --with-flute-jar=JARFILE   Specify path to jarfile manually
  --with-jfreereport-jar=JARFILE   Specify path to jarfile manually
  --with-liblayout-jar=JARFILE   Specify path to jarfile manually
  --with-libformula-jar=JARFILE   Specify path to jarfile manually
  --with-librepository-jar=JARFILE   Specify path to jarfile manually
  --with-libfonts-jar=JARFILE   Specify path to jarfile manually
  --with-jcommon-serializer-jar=JARFILE   Specify path to jarfile manually
  --with-system-xml-apis  Use xml-apis already on system

  --with-xml-apis-jar=JARFILE   Specify path to jarfile manually
  --with-system-xerces    Use xerces already on system

  --with-xerces-jar=JARFILE   Specify path to jarfile manually
  --with-system-xalan     Use xalan already on system

  --with-xalan-jar=JARFILE   Specify path to jarfile manually
  --with-serializer-jar=JARFILE   Specify path to jarfile manually
  --with-system-libxslt   Use libxslt already on system

  --with-system-odbc-headers     Use the odbc headers already on system

  --with-system-sane-header      Use sane.h already on system

  --with-system-xrender-headers  Use XRender headers already on system

  --with-system-curl      Use curl already on system

  --with-system-boost     Use boost already on system

  --with-system-vigra     Use vigra already on system

  --with-system-neon      Use neon already on system

  --with-system-agg       Use AGG already on system

  --with-system-hunspell   Use libhunspell already on system

  --with-system-mythes    Use mythes already on system

  --with-system-altlinuxhyph    Use ALTLinuxhyph already on system

  --with-system-lpsolve         Use lpsolve already on system

  --with-system-mozilla   Use mozilla already on system. Note that some
                          components cannot be built against a contemporary
                          mozilla. The flavour used can be specified by
                          --with-system-mozilla=<flavour>. Supported are:
                          libxul (default), xulrunner, firefox, seamonkey,
                          mozilla

  --with-stlport         The location that STLport is installed in. The STL
                          header files are assumed to be in
                          stlport-home/stlport and the STLPort library in
                          stlport-home/lib.

                          Usage: --with-stlport=<absolute path to stlport home>

                          Warning!!, disabling using --without-stlport or
                          enabling using --with-stlport on a platform that
                          defaults to the opposite will break ABI compatability

  --with-jdk-home         if you have installed JDK 1.3 or later on your system
                          please supply the path here.
                          Note that this is not the location of the Java binary
                          but the location of the entire distribution.

                          Usage: --with-jdk-home=<absolute path to JDK home>

  --with-gxx-include-path if you want to override the autodetected g++ include
                          path.

                          Usage: --with-gxx-include-path=<absolute path to g++ include dir>

  --with-java             Build with[out] Java support.  If you use
                          --without-java/--with-java=no then the build will have
                          no support for Java components, applets, accessibility
                          or XML filters.

  --with-ant-home         If you have installed Jakarta Ant on your system,
                          please supply the path here.
                          Note that this is not the location of the Ant binary
                          but the location of the entire distribution.

                          Usage: --with-ant-home=<absolute path to Ant home>

  --with-perl-home        If you have installed the Perl 5 Distribution, on your
                          system, please supply the path here.
                          Note that this is not the location of the Perl binary
                          but the location of the entire distribution.

                          Usage: --with-perl-home=<absolute path to Perl 5 home>

  --with-cl-home          For Windows NT users, please supply the path
                          for the Microsoft C/C++ compiler.
                          Note that this is not the location of the compiler
                          binary but the location of the entire distribution.

                          Usage: --with-cl-home=<absolute path to Microsoft C/C++ compiler home>

  --with-mspdb-path       For Microsoft C/C++ compiler users, please supply the
                          path pointing to the mspdb71.dll (.NET 2003).

                          Usage: --with-mspdb-path=<absolute path to mspdb71.dll>

  --with-midl-path        For Microsoft C/C++ .NET compiler users, please supply
                          the path pointing to the midl.exe.

                          Usage: --with-midl-path=<absolute path to midl.exe>

  --with-csc-path         For Microsoft C/C++ .NET compiler users, please supply
                          the path pointing to the csc.exe.

                          Usage: --with-csc-path=<absolute path to csc.exe>

  --with-nsis-path        For Windows users, please supply the path to the
                          "Nullsoft Scriptable Install System" (NSIS). If NSIS
                          is found in the path or this option is supplied a self
                          contained executable installer for OpenOffice.org will
                          be created.

                          Usage: --with-nsis-path=<absolute path to nsis.exe>

  --with-frame-home       For Microsoft C/C++ .NET compiler users, please supply
                          the path pointing to lib/mscoree.lib, usually
                          something like:
                          "/cygdrive/c/Program Files/Microsoft Visual Studio .NET/FrameworkSDK"

                          MS Visual Toolkit compiler users, please supply the
                          path pointing to lib/msvcrt.lib, usually something
                          like:
                          "/cygdrive/c/Program Files/Microsoft Visual Studio .NET 2003/Vc7"

                          Usage: --with-frame-home=<absolute path to Framework SDK [home]>

  --with-psdk-home        For Windows users, please supply the path to the
                          Microsoft Platform SDK.

                          Usage: --with-psdk-home=<absolute path to Microsoft Platform SDK>

  --with-directx-home     For Windows users, please supply the path to the
                          Microsoft DirectX SDK.

                          Usage: --with-directx-home=<absolute path to Microsoft DirectX SDK>

  --with-local-solenv     If you have solenv in a location other than ../solenv,
                          please supply the path here.

                          Usage: --with-local-solenv=<absolute path to solenv>

  --with-local-solver     if you have solver in a location other than ../solver,
                          please supply the path here.

                          Usage: --with-local-solver=<absolute path to solver>

  --with-lang             Use this option to build OpenOffice.org with
                          additional language support. English (US) is always
                          included by default. Separate multiple languages with
                          space. For all languages, use --with-lang=ALL.

                          Usage: --with-lang="es sw tu cs sk"

  --with-poor-help-localizations
                           Use this option to specify which languages have
                          unusable help localizations. Separate multiple
                          languages with space.

                          Usage: --with-poor-help-localizations="af ar be-BY ca"

  --with-dict             Use this option to build OpenOffice.org with
                          dictionary support. ALL dictionaries are always
                          included by default unless overridden with
                          this option. Separate multiple dictionaries with
                          commas. For all dictionaries, use --with-dict=ALL.

                          Usage: --with-dict=ENGB,ENUS,ITIT

  --with-intro-bitmaps    Prefer the specified intro bitmaps over the
                          the default one.  Can be more than one (separated by
                          commas), the order means priority of fallback if the
                          first does not exist (in the installed tree).

                          Usage: --with-intro-bitmaps=/path/my_ooo_intro.bmp

  --with-about-bitmaps    Similarly to --with-intro-bitmaps, this allows
                          specification of bitmaps for the About box.

                          Usage: --with-about-bitmaps=/path/my_ooo_about.bmp

  --with-vendor           Set vendor of the build.

                          Usage: --with-vendor="John the Builder"

  --with-unix-wrapper    Redefines the name of the UNIX wrapper that will be used
                          in the desktop files and in the desktop-integration RPMs.

                          Usage: --with-unix-wrapper=ooffice

  --with-asm-home         For Windows users, please supply the path for the
                          ml.exe assembler.

                          Usage: --with-asm-home=<path to ml.exe directory>

  --with-os-version       For FreeBSD users, use this option option to override
                          the detected OSVERSION.

                          Usage: --with-os-version=<OSVERSION>

  --with-unzip-home       Deprecated: use --with-zip-home instead
  --with-zip-home         If you use a non standard zip, for example windows
                          please supply the path for zip

                          Usage: --with-zip-home=<path to zip executable>

  --with-mingwin          For Windows users, use the mingwin32 compiler within
                          cygwin environment, this implies --with-use-shell=tcsh

                          Usage: --with-mingwin=yes

                          For !Windows use, use the mingw32 C++ compiler to
                          (re-) build unowinreg.dll. Specify the MinGW C++
                          Compilers name.

                          Usage: --with-mingwin=i586-mingw32msvc-g++

  --with-use-shell        Use this option to override the default shell to be
                          used for the build environment.
                          Supported options:
                            tcsh (default)
                            bash
                            4nt (windows only)

                          Usage: --with-use-shell=tcsh|bash|4nt

  --with-build-version    Allows the builder to add a custom version tag
                          that will appear in the Help/About box for QA
                          purposes.

                          Usage: --with-build-version="Built by Jim"

  --with-alloc            Define which allocator to build with
			                 (choices are oo, system, tcmalloc)

  --with-x                use the X Window System

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    C/C++/Objective C preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CPP         C preprocessor
  CXX         C++ compiler command
  CXXFLAGS    C++ compiler flags
  CXXCPP      C++ preprocessor
  PKG_CONFIG  path to pkg-config utility
  FREETYPE_CFLAGS
              C compiler flags for FREETYPE, overriding pkg-config
  FREETYPE_LIBS
              linker flags for FREETYPE, overriding pkg-config
  LIBWPD_CFLAGS
              C compiler flags for LIBWPD, overriding pkg-config
  LIBWPD_LIBS linker flags for LIBWPD, overriding pkg-config
  LIBXSLT_CFLAGS
              C compiler flags for LIBXSLT, overriding pkg-config
  LIBXSLT_LIBS
              linker flags for LIBXSLT, overriding pkg-config
  LIBXML_CFLAGS
              C compiler flags for LIBXML, overriding pkg-config
  LIBXML_LIBS linker flags for LIBXML, overriding pkg-config
  MOZ_NSS_CFLAGS
              C compiler flags for MOZ_NSS, overriding pkg-config
  MOZ_NSS_LIBS
              linker flags for MOZ_NSS, overriding pkg-config
  MOZ_NSPR_CFLAGS
              C compiler flags for MOZ_NSPR, overriding pkg-config
  MOZ_NSPR_LIBS
              linker flags for MOZ_NSPR, overriding pkg-config
  MOZILLAXPCOM_CFLAGS
              C compiler flags for MOZILLAXPCOM, overriding pkg-config
  MOZILLAXPCOM_LIBS
              linker flags for MOZILLAXPCOM, overriding pkg-config
  MOZGTK2_CFLAGS
              C compiler flags for MOZGTK2, overriding pkg-config
  MOZGTK2_LIBS
              linker flags for MOZGTK2, overriding pkg-config
  MOZLIBREQ_CFLAGS
              C compiler flags for MOZLIBREQ, overriding pkg-config
  MOZLIBREQ_LIBS
              linker flags for MOZLIBREQ, overriding pkg-config
  XMKMF       Path to xmkmf, Makefile generator for X Window System
  NEON_CFLAGS C compiler flags for NEON, overriding pkg-config
  NEON_LIBS   linker flags for NEON, overriding pkg-config
  OPENSSL_CFLAGS
              C compiler flags for OPENSSL, overriding pkg-config
  OPENSSL_LIBS
              linker flags for OPENSSL, overriding pkg-config
  AGG_CFLAGS  C compiler flags for AGG, overriding pkg-config
  AGG_LIBS    linker flags for AGG, overriding pkg-config
  HUNSPELL_CFLAGS
              C compiler flags for HUNSPELL, overriding pkg-config
  HUNSPELL_LIBS
              linker flags for HUNSPELL, overriding pkg-config
  GNOMEVFS_CFLAGS
              C compiler flags for GNOMEVFS, overriding pkg-config
  GNOMEVFS_LIBS
              linker flags for GNOMEVFS, overriding pkg-config
  GCONF_CFLAGS
              C compiler flags for GCONF, overriding pkg-config
  GCONF_LIBS  linker flags for GCONF, overriding pkg-config
  GTK_CFLAGS  C compiler flags for GTK, overriding pkg-config
  GTK_LIBS    linker flags for GTK, overriding pkg-config
  DBUS_CFLAGS C compiler flags for DBUS, overriding pkg-config
  DBUS_LIBS   linker flags for DBUS, overriding pkg-config
  GIO_CFLAGS  C compiler flags for GIO, overriding pkg-config
  GIO_LIBS    linker flags for GIO, overriding pkg-config
  CAIRO_CFLAGS
              C compiler flags for CAIRO, overriding pkg-config
  CAIRO_LIBS  linker flags for CAIRO, overriding pkg-config
  GOBJECT_CFLAGS
              C compiler flags for GOBJECT, overriding pkg-config
  GOBJECT_LIBS
              linker flags for GOBJECT, overriding pkg-config

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

