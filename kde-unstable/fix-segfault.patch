--- a/services/fileindexer/indexer/exiv2extractor.cpp
+++ b/services/fileindexer/indexer/exiv2extractor.cpp
@@ -63,19 +63,45 @@
 }
 
 namespace {
+    QString toString(const Exiv2::Value& value) {
+        std::string str = value.toString();
+        return QString::fromUtf8( str.c_str(), str.length() );
+    }
+
     QVariant toVariantLong(const Exiv2::Value& value) {
-        qlonglong l = value.toLong();
-        return QVariant(l);
+        if( value.typeId() == Exiv2::unsignedLong || value.typeId() == Exiv2::signedLong ) {
+            qlonglong val = value.toLong();
+            return QVariant( val );
+        }
+
+        QString str( toString(value) );
+        bool ok = false;
+        int val = str.toInt(&ok);
+        if( ok )
+            return QVariant( val );
+
+        return QVariant();
     }
 
     QVariant toVariantFloat(const Exiv2::Value& value) {
-        double f = value.toFloat();
-        return QVariant(f);
+        if( value.typeId() == Exiv2::tiffFloat || value.typeId() == Exiv2::tiffDouble )
+            return QVariant( value.toFloat() );
+
+        QString str( toString(value) );
+        bool ok = false;
+        float val = str.toFloat(&ok);
+        if( ok )
+            return QVariant( val );
+
+        return QVariant();
     }
 
     QVariant toVariantString(const Exiv2::Value& value) {
-        std::string str = value.toString();
-        return QVariant( QString::fromUtf8( str.c_str(), str.length() ) );
+        QString str = toString(value);
+        if( !str.isEmpty() )
+            return QVariant( str );
+
+        return QVariant();
     }
 }
 
@@ -122,27 +148,37 @@
 
     it = data.findKey( Exiv2::ExifKey("Exif.Photo.Flash") );
     if( it != data.end() ) {
-        fileRes.setProperty( NEXIF::flash(), toVariantLong( it->value() ) );
+        QVariant value = toVariantLong( it->value() );
+        if( !value.isNull() )
+            fileRes.setProperty( NEXIF::flash(), value );
     }
 
     it = data.findKey( Exiv2::ExifKey("Exif.Photo.PixelXDimension") );
     if( it != data.end() ) {
-        fileRes.setProperty( NFO::width(), toVariantLong( it->value() ) );
+        QVariant value = toVariantLong( it->value() );
+        if( !value.isNull() )
+            fileRes.setProperty( NFO::width(), value );
     }
 
     it = data.findKey( Exiv2::ExifKey("Exif.Photo.PixelYDimension") );
     if( it != data.end() ) {
-        fileRes.setProperty( NFO::height(), toVariantLong( it->value() ) );
+        QVariant value = toVariantLong( it->value() );
+        if( !value.isNull() )
+            fileRes.setProperty( NFO::height(), value );
     }
 
     it = data.findKey( Exiv2::ExifKey("Exif.Image.Make") );
     if( it != data.end() ) {
-        fileRes.setProperty( NEXIF::make(), toVariantString( it->value() ) );
+        QVariant value = toVariantString( it->value() );
+        if( !value.isNull() )
+            fileRes.setProperty( NEXIF::make(), value );
     }
 
     it = data.findKey( Exiv2::ExifKey("Exif.Image.Model") );
     if( it != data.end() ) {
-        fileRes.setProperty( NEXIF::model(), toVariantString( it->value() ) );
+        QVariant value = toVariantString( it->value() );
+        if( !value.isNull() )
+            fileRes.setProperty( NEXIF::model(), value );
     }
 
     it = data.findKey( Exiv2::ExifKey("Exif.Image.DateTime") );
@@ -153,57 +189,79 @@
 
     it = data.findKey( Exiv2::ExifKey("Exif.Image.Orientation") );
     if( it != data.end() ) {
-        fileRes.setProperty( NEXIF::orientation(), toVariantLong( it->value() ) );
+        QVariant value = toVariantLong( it->value() );
+        if( !value.isNull() )
+            fileRes.setProperty( NEXIF::orientation(), value );
     }
 
     it = data.findKey( Exiv2::ExifKey("Exif.Photo.FocalLength") );
     if( it != data.end() ) {
-        fileRes.setProperty( NEXIF::focalLength(), toVariantFloat( it->value() ) );
+        QVariant value = toVariantFloat( it->value() );
+        if( !value.isNull() )
+            fileRes.setProperty( NEXIF::focalLength(), value );
     }
 
     it = data.findKey( Exiv2::ExifKey("Exif.Photo.FocalLengthIn35mmFilm") );
     if( it != data.end() ) {
-        fileRes.setProperty( NEXIF::focalLengthIn35mmFilm(), toVariantFloat( it->value() ) );
+        QVariant value = toVariantFloat( it->value() );
+        if( !value.isNull() )
+            fileRes.setProperty( NEXIF::focalLengthIn35mmFilm(), value );
     }
 
     it = data.findKey( Exiv2::ExifKey("Exif.Photo.ExposureTime") );
     if( it != data.end() ) {
-        fileRes.setProperty( NEXIF::exposureTime(), toVariantFloat( it->value() ) );
+        QVariant value = toVariantFloat( it->value() );
+        if( !value.isNull() )
+            fileRes.setProperty( NEXIF::exposureTime(), value );
     }
 
     it = data.findKey( Exiv2::ExifKey("Exif.Photo.ApertureValue") );
     if( it != data.end() ) {
-        fileRes.setProperty( NEXIF::apertureValue(), toVariantFloat( it->value() ) );
+        QVariant value = toVariantFloat( it->value() );
+        if( !value.isNull() )
+            fileRes.setProperty( NEXIF::apertureValue(), value );
     }
 
     it = data.findKey( Exiv2::ExifKey("Exif.Photo.ExposureBiasValue") );
     if( it != data.end() ) {
-        fileRes.setProperty( NEXIF::exposureBiasValue(), toVariantFloat( it->value() ) );
+        QVariant value = toVariantFloat( it->value() );
+        if( !value.isNull() )
+            fileRes.setProperty( NEXIF::exposureBiasValue(), value );
     }
 
     it = data.findKey( Exiv2::ExifKey("Exif.Photo.WhiteBalance") );
     if( it != data.end() ) {
-        fileRes.setProperty( NEXIF::whiteBalance(), toVariantLong( it->value() ) );
+        QVariant value = toVariantLong( it->value() );
+        if( !value.isNull() )
+            fileRes.setProperty( NEXIF::whiteBalance(), value );
     }
 
     it = data.findKey( Exiv2::ExifKey("Exif.Photo.MeteringMode") );
     if( it != data.end() ) {
-        fileRes.setProperty( NEXIF::meteringMode(), toVariantLong( it->value() ) );
+        QVariant value = toVariantLong( it->value() );
+        if( !value.isNull() )
+            fileRes.setProperty( NEXIF::meteringMode(), value );
     }
 
     it = data.findKey( Exiv2::ExifKey("Exif.Photo.ISOSpeedRatings") );
     if( it != data.end() ) {
-        fileRes.setProperty( NEXIF::isoSpeedRatings(), toVariantLong( it->value() ) );
+        QVariant value = toVariantLong( it->value() );
+        if( !value.isNull() )
+            fileRes.setProperty( NEXIF::isoSpeedRatings(), value );
     }
 
     it = data.findKey( Exiv2::ExifKey("Exif.Photo.Saturation") );
     if( it != data.end() ) {
-        fileRes.setProperty( NEXIF::saturation(), toVariantLong( it->value() ) );
+        QVariant value = toVariantLong( it->value() );
+        if( !value.isNull() )
+            fileRes.setProperty( NEXIF::saturation(), value );
     }
 
     it = data.findKey( Exiv2::ExifKey("Exif.Photo.Sharpness") );
     if( it != data.end() ) {
-        fileRes.setProperty( NEXIF::sharpness(), toVariantLong( it->value() ) );
+        QVariant value = toVariantLong( it->value() );
+        if( !value.isNull() )
+            fileRes.setProperty( NEXIF::sharpness(), value );
     }
 
     fileRes.addType( NEXIF::Photo() );
